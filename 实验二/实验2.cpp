#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<iostream>

using namespace std;

//IP1置换表
int IP_1[64]={57,49,41,33,25,17,9,1,
59,51,43,35,27,19,11,3,
61,53,45,37,29,21,13,5,
63,55,47,39,31,23,15,7,
56,48,40,32,24,16,8,0,
58,50,42,34,26,18,10,2,
60,52,44,36,28,20,12,4,
62,54,46,38,30,22,14,6
};
//IP2逆置换表
int IP_2[64]={39,7,47,15,55,23,63,31,
38,6,46,14,54,22,62,30,
37,5,45,13,53,21,61,29,
36,4,44,12,52,20,60,28,
35,3,43,11,51,19,59,27,
34,2,42,10,50,18,58,26,
33,1,41,9,49,17,57,25,
32,0,40,8,48,16,56,24
};
//E扩展置换表
int E_case[48]={31,0,1,2,3,4,
		3,4,5,6,7,8,
		7,8,9,10,11,12,
	11,12,13,14,15,16,
	15,16,17,18,19,20,
	19,20,21,22,23,24,
	23,24,25,26,27,28,
	27,28,29,30,31,0
};
//S盒压缩

int S_Box[8][4][16]={
					{
						{14,4,13,1,2,15,11,8,3,10,6,12,5,9,0,7},
						{0,15,7,4,14,2,13,1,10,6,12,11,9,5,3,8},
						{4,1,14,8,13,6,2,11,15,12,9,7,3,10,5,0},
						{15,12,8,2,4,9,1,7,5,11,3,14,10,0,6,13}
					},

					{
						{15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,10},
						{3,13,4,7,15,2,8,14,12,0,1,10,6,9,11,5},
						{0,14,7,11,10,4,13,1,5,8,12,6,9,3,2,15},
						{13,8,10,1,3,15,4,2,11,6,7,12,0,5,14,9}
					},

					{
						{10,0,9,14,6,3,15,5,1,13,12,7,11,4,2,8},
						{13,7,0,9,3,4,6,10,2,8,5,14,12,11,15,1},
						{13,6,4,9,8,15,3,0,11,1,2,12,5,10,14,7},
						{1,10,13,0,6,9,8,7,4,15,14,3,11,5,2,12}
					},

					{
						{7,13,14,3,0,6,9,10,1,2,8,5,11,12,4,15},
						{13,8,11,5,6,15,0,3,4,7,2,12,1,10,14,9},
						{10,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4},
						{3,15,0,6,10,1,13,8,9,4,5,11,12,7,2,14}
					},

					{
						{2,12,4,1,7,10,11,6,8,5,3,15,13,0,14,9},
						{14,11,2,12,4,7,13,1,5,0,15,10,3,9,8,6},
						{4,2,1,11,10,13,7,8,15,9,12,5,6,3,0,14},
						{11,8,12,7,1,14,2,13,6,15,0,9,10,4,5,3}
					},

					{
						{12,1,10,15,9,2,6,8,0,13,3,4,14,7,5,11},
						{10,15,4,2,7,12,9,5,6,1,13,14,0,11,3,8},
						{9,14,15,5,2,8,12,3,7,0,4,10,1,13,11,6},
						{4,3,2,12,9,5,15,10,11,14,1,7,6,0,8,13}
					},

					{
						{4,11,2,14,15,0,8,13,3,12,9,7,5,10,6,1},
						{13,0,11,7,4,9,1,10,14,3,5,12,2,15,8,6},
						{1,4,11,13,12,3,7,14,10,15,6,8,0,5,9,2},
						{6,11,13,8,1,4,10,7,9,5,0,15,14,2,3,12}
					},

					{
						{13,2,8,4,6,15,11,1,10,9,3,14,5,0,12,7},
						{1,15,13,8,10,3,7,4,12,5,6,11,0,14,9,2},
						{7,11,4,1,9,12,14,2,0,6,10,13,15,3,5,8},
						{2,1,14,7,4,10,8,13,15,12,9,0,3,5,6,11}
					}
				};

//P盒置换
int P_Table[32] ={
	15,6,19,20,
	28,11,27,16,
    0,14,22,25,
	4,17,30,9,
    1,7,23,13,
	31,26,2,8,
    18,12,29,5,
	21,10,3,24
};

int Permute[32]={
	16,7,20,21,29,12,28,17,
	1,15,23,26,5,18,31,10,
	2,8,24,14,32,27,3,9,
	19,13,30,6,22,11,4,25};
//密钥PC-1置换表
int PC_1[56]={56,48,40,32,24,16,8,
0,57,49,41,33,25,17,
9,1,58,50,42,34,26,
18,10,2,59,51,43,35,
62,54,46,38,30,22,14,
6,61,53,45,37,29,21,
13,5,60,52,44,36,28,
20,12,4,27,19,11,3
};
//密钥PC-2置换表
int PC_2[48]={13,16,10,23,0,4,
	2,27,14,5,20,9,
	22,18,11,3,25,7,
	15,6,26,19,12,1,
    40,51,30,36,46,54,
	29,39,50,44,32,47,
	43,48,38,55,33,52,
	45,41,49,35,28,31};
//密钥每次轮回移位表
int Left[16]={1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1};

int Key[16][48];			//存放16轮子密钥
int c[64];				//存放密文
int L[17][32],R[17][32];  //存放加密过程中左右部分


void To2(char p[8],int b[64])    //换成二进制
{
	int i,k=0;
	for(i=0;i<8;i++)
	{
		int j=0x80;
		for(;j;j>>=1)
		{
			if(j&p[i])
				b[k++]=1;
			else
				b[k++]=0;
		}
	}
}

void To10(char p[16],int b[64])    //换成十进制
{
	int i,j,k;
	int t[16][4];
	for(i=0;i<16;i++)
	{
		for(j=0;j<4;j++)
		{
			t[i][j]=b[4*i+j];
		}
	}
	for (i=0;i<16;i++)
	{
		k=t[i][0]*8+t[i][1]*4+t[i][2]*2+t[i][3]*1;
		p[i]=k;
	}

}

void To102(int a[],char b[])//二进制转十进制
{
	int i,j;
	int temp;
	int arry[8][8];
	int t=1,k;

	for(i=0;i<8;i++)
	{
		for(j=0;j<8;j++)
		{
			arry[i][j]=a[8*i+j];
		}
	}
	for (i=0;i<8;i++)
	{
		temp=0;
		for(j=7;j>=0;j--)
		{
			if(arry[i][j]==1)
			{
				t=1;
				for(k=0;k<7-j;k++)
				{
					t=t*2;
				}
				temp+=t;
			}
		}
		b[i]=temp;
	}
}


void ZhiHuan(int sz1[],int sz2[],int sz3[],int num)
{
	int i,t;
	for(i=0;i<num;i++)
	{
		t=sz2[i];
		sz3[i]=sz1[t];
	}
}

void ZuoYi(int sz1[],int sz2[],int n)
{
	int i;
	for(i=0;i<28;i++)
		sz2[i]=sz1[(n+i)%28];
}

void ChanShengKey(int K[64])//子密钥产生函数
{
	int K1[56],K2[56];
	int C[17][28],D[17][28];
	int i;
	ZhiHuan(K,PC_1,K1,56);
	for(i=0;i<28;i++)		//将PC_1输出的结果分为左右两部分
	{
		C[0][i]=K1[i];
		D[0][i]=K1[i+28];
	}
	i=0;
	while(i<16)
	{
		int j;
		ZuoYi(C[i],C[i+1],Left[i]);
		ZuoYi(D[i],D[i+1],Left[i]);
		for(j=0;j<28;j++)
		{
			K2[j]=C[i+1][j];
			K2[j+28]=D[i+1][j];
		}
		ZhiHuan(K2,PC_2,Key[i],48);		//密钥置换PC_2
		i++;
	}
}

void SBianHuan(int t[],int st[])
{
	int h,l;			//行，列
	int sh[8];            //存放经过s盒的十进制结果
	int i,j;
	int temp[4];
	for(i=0;i<8;i++) //s盒压缩变换
	{
		h=t[(1+(i*6))-1]*2 + t[(6+(i*6))-1];
		l =t[(2+(i*6))-1]*8 + t[(3+(i*6))-1]*4 + t[(4+(i*6))-1]*2 + t[(5+(i*6))-1];
		sh[i]=S_Box[i][h][l];
	}
	for(i=0;i<8;i++)
	{
	   for(j=3;j>=0;j--)
	   {
		   temp[j]=sh[i]%2;
		   sh[i]=sh[i]/2;
	   }
	   for(j=0;j<4;j++)
	   {
		   st[4*i+j]=temp[j];
	   }
    }
}

void FBianHuan(int r[32],int b[32],int n)
{
	int i;
	int t[48],st[32];
	ZhiHuan(r,E_case,t,48);
	//扩展置换
	cout<<"扩展置换E"<<n+1<<endl;
	for(int w=0;w<48;w++)
    {
        cout<<t[w];
        if((w+1)%4==0)
            cout<<" ";
    }
    cout<<endl;

	for(i=0;i<48;i++)//与子密钥异或
	{
		t[i] ^= Key[n][i];
	}
	//与秘钥相异或
	cout<<"与秘钥相异或"<<n+1<<endl;
	for(int w=0;w<48;w++)
    {
        cout<<t[w];
        if((w+1)%4==0)
            cout<<" ";
    }
    cout<<endl;

	SBianHuan(t,st);
	//S盒变换
	cout<<"S盒变换"<<n+1<<endl;
	for(int w=0;w<32;w++)
    {
        cout<<st[w];
        if((w+1)%4==0)
            cout<<" ";
    }
    cout<<endl;
    //int stt[32]={0,0,1,1,0,0,0,1,0,0,1,0,1,1,0,0,0,0,1,0,1,1,1,0,0,1,0,0,0,1,1,0};
	ZhiHuan(st,P_Table,b,32);
	//置换运算P
	cout<<"置换运算P"<<n+1<<endl;
	for(int w=0;w<32;w++)
    {
        cout<<b[w];
        if((w+1)%4==0)
            cout<<" ";
    }
    cout<<endl;
}

void JiaMi(int m[64],int c0[64])
{
	int m1[64],a[32],c1[64];
	int i,k=1;
	ZhiHuan(m,IP_1,m1,64);
	for(i=0;i<32;i++)
	{
		L[0][i]=m1[i];
		R[0][i]=m1[i+32];
	}
	while(k<17)
	{
		FBianHuan(R[k-1],a,k-1);
		for(i=0;i<32;i++)
		{
			L[k][i]=R[k-1][i];
			R[k][i]=L[k-1][i]^a[i];
		}
		k++;
	}
	for(i=0;i<32;i++)
	{
		c1[i]=R[16][i];
		c1[i+32]=L[16][i];
	}
	ZhiHuan(c1,IP_2,c0,64);   //逆初始置换
}

void changeKey()
{
    int i,j;
	int tmp[16][48];

	for(i=0;i<16;i++)
	{
		for(j=0;j<48;j++)
		{
			tmp[i][j]=Key[i][j];
		}
	}
	for(i=0;i<16;i++)
	{
		for(j=0;j<48;j++)
		{
			Key[i][j]=tmp[15-i][j];
		}
	}
}

void JieMi(int c0[64],int m[])
{
    int c1[64],t[64];
	int i,k;
	int a[32];
	changeKey();
	//查看子秘钥
    for(int w=1;w<=16;w++)
    {
        cout<<"密钥"<<w<<endl;
        for(int f=0;f<48;f++)
        {
            cout<<Key[w][f];
            if((f+1)%4==0)
                cout<<" ";
        }
        cout<<endl;
    }

    ZhiHuan(c0,IP_1,c1,64);		//初始IP
	for(i=0;i<32;i++)
	{
		L[0][i]=c1[i];
		R[0][i]=c1[i+32];
	}
	k=1;
	while(k<17)
	{
		FBianHuan(R[k-1],a,k-1);
		for(i=0;i<32;i++)
		{
			L[k][i]=R[k-1][i];
			R[k][i]=L[k-1][i]^a[i];
		}
		k++;
	}
	for(i=0;i<32;i++)
	{
		t[i]=R[16][i];
		t[i+32]=L[16][i];
	}
	ZhiHuan(t,IP_2,m,64);   //逆初始置换
}

main()
{
	int xuan;
	char s1[8],s2[8],s3[16];
	/*int m[64]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
	y[64]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};*/
	int m[64],y[64];//m明文密文，y密钥

	while(1)
	{
		/*cout<<"请选择："<<endl;
		cout<<"1.加密"<<endl;
		cout<<"2.解密"<<endl;
		cin>>xuan;
		if(xuan==1)
		{*/
			while(strlen(s1)!=8)
			{
				cout<<"请输入明文：";
				cin>>s1;
			}
			To2(s1,m);
			while(strlen(s2)!=8)
			{
				cout<<"请输入秘钥：";
				cin>>s2;
			}
			To2(s2,y);


			//明文密钥
            cout<<"明文为"<<endl;
            for(int w=0;w<64;w++)
            {
                cout<<m[w];
                if((w+1)%4==0)
                    cout<<" ";
            }
            cout<<endl;
            cout<<"密钥为"<<endl;
            for(int w=0;w<64;w++)
            {
                cout<<y[w];
                if((w+1)%4==0)
                    cout<<" ";
            }
            cout<<endl;

			ChanShengKey(y);
			//查看子秘钥
			for(int w=1;w<=16;w++)
            {
                cout<<"密钥"<<w<<endl;
                for(int f=0;f<48;f++)
                {
                    cout<<Key[w][f];
                    if((f+1)%4==0)
                        cout<<" ";
                }
                cout<<endl;
            }

			JiaMi(m,c);
			//To10(c,s3);
			To10(s3,c);
			//To10(c,s3,64);
			//cout<<"密文为："<<c<<endl;
			cout<<"密文为："<<endl;
			for(int w=0;w<64;w++)
            {
                cout<<c[w];
                if((w+1)%4==0)
                    cout<<" ";
            }
            cout<<endl;
            for(int w=0;w<16;w++)
            {
                printf("%X",s3[w]);
            }
            cout<<endl;




            char ch;
            cout<<"按任意键解密"<<endl;
            cin>>ch;
            int jm[64];
            char s4[8];
            JieMi(c,jm);
            cout<<"明文为："<<endl;
			for(int w=0;w<64;w++)
            {
                cout<<jm[w];
                if((w+1)%4==0)
                    cout<<" ";
            }
            cout<<endl;
            To102(jm,s4);
            for(int w=0;w<8;w++)
                cout<<s4[w];


            cout<<endl;
		/*}
		else if(xuan==2)
		{
			//JieMi();
		}*/
	}
}
